name: Packages

on:
  release:
    types: [released]
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-2022

    steps:
    - name: Event
      env:       
        event_name: ${{ github.event_name }}
      run: echo "event_name $env:event_name"
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
#     - name: Setup MSBuild.exe
#       uses: microsoft/setup-msbuild@master
#       with:
#         vs-prerelease: true
#         vs-version: 17
        
    - name: Setup Scoop
      run: |
        git submodule update --init --recursive
        iwr -useb get.scoop.sh | iex
        scoop install gitversion
        GitVersion
        
    - name: Restore dependencies
      run: dotnet restore --arch x64

    - name: Build Debug
      if: ${{ github.event_name != 'release' }}
      run: |
        set-location ${{ github.workspace }}\src\MDS.AspnetServices
        dotnet build .\MDS.AspnetServices.csproj --configuration Debug --arch x64 --no-restore
    - name: Build Release
      if: ${{ github.event_name == 'release' }}
      run: |
        set-location ${{ github.workspace }}\src\MDS.AspnetServices
        dotnet build .\MDS.AspnetServices.csproj --configuration Release --arch x64 --no-restore 
        if(Test-File bin\x64\Debug\MDS.AspnetServices*.nupkg) {
          $pkg = Get-ChildItem bin\x64\Debug\MDS.AspnetServices*.nupkg
        }

#     - name: Dotnet Debug Tests
#       if: ${{ github.event_name != 'release' }}
#       run: |
#         set-location ${{ github.workspace }}\src\CommunityToolkit.Extensions.Hosting.WindowsAppSdk
#         dotnet test -c Debug --no-build
#     - name: Dotnet Release Tests
#       if: ${{ github.event_name == 'release' }}
#       run: |
#         set-location ${{ github.workspace }}\src\CommunityToolkit.Extensions.Hosting.WindowsAppSdk
#         dotnet test -c Release --no-build

    - name: GitHub Packages
      if: ${{ github.event_name != 'release' }}
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        # Path of NuPkg
        nupkg-path: ${{ github.workspace }}src\MDS.AspnetServices\bin\x64\Debug\MDS.AspnetServices.${{ env.GitVersion_SemVer }}.nupkg
        # package repository owner
        repo-owner: sharpninja
        # user account
        gh-user: sharpninja
        # access token
        token: ${{ secrets.GITHUB_TOKEN }}
        # skip publishing duplicated package(s)
        skip-duplicate: true
        
    - name: Nuget Publish
      if: ${{ github.event_name == 'release' }}
      run: | 
        $outPath = (Join-Path . -Child packages)
        set-location ${{ github.workspace }}\MDS.AspnetServices
        dotnet pack -c Release --no-build --include-source --arch x64 -o $outPath 
        
        gci $outPath\*.nupkg -ErrorAction Stop
        gci $outPath\*.snupkg -ErrorAction Stop
        
        gci $outPath\*.nupkg | forEach-Object -process {
          dotnet nuget push $_ -k "${{ secrets.NUGET_KEY }}" -s https://api.nuget.org/v3/index.json --skip-duplicate
        }
        gci $outPath\*.snupkg | forEach-Object -process {
          dotnet nuget push $_ -k "${{ secrets.NUGET_KEY }}" -s https://api.nuget.org/v3/index.json --skip-duplicate
        }
        
