name: Packages

on:
  release:
    types: [released]
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    env:
      PLATFORM: x64

    runs-on: windows-2022

    steps:
    - name: Event
      env:
        event_name: ${{ github.event_name }}
      run: echo "event_name $env:event_name"
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: Setup GitVersion
      run: |
        dotnet tool install gitversion.tool -g
        dotnet-GitVersion

    - name: Restore dependencies
      run: dotnet restore

    - name: Build ASP.Net Services Debug
      if: ${{ github.event_name != 'release' }}
      run: |
        $ws = "${{ github.workspace }}"
        set-location $ws\submodules\ColorCodePortable\ColorCode
        dotnet pack -c Debug /property:Platform=${{ env.PLATFORM }} --no-restore
        set-location $ws\submodules\Markdig.SyntaxHighlighting\src\Markdig.SyntaxHighlighting
        dotnet pack -c Debug /property:Platform=${{ env.PLATFORM }} --no-restore
        set-location $ws\src\MDS.AspnetServices
        dotnet pack -c Debug /property:Platform=${{ env.PLATFORM }} --no-restore
        set-location $ws\src\MDS.AppFramework
        dotnet build -c Debug /property:Platform=${{ env.PLATFORM }} --no-restore

    - name: Build ASP.Net Services Release
      if: ${{ github.event_name == 'release' }}
      run: |
        $ws = "${{ github.workspace }}"
        $outPath = (Join-Path . -Child packages)
        set-location $ws\submodules\ColorCodePortable\ColorCode
        dotnet pack -c Release /property:Platform=${{ env.PLATFORM }} --no-restore
        set-location $ws\submodules\Markdig.SyntaxHighlighting\src\Markdig.SyntaxHighlighting
        dotnet pack -c Release /property:Platform=${{ env.PLATFORM }} --no-restore
        set-location $ws\src\MDS.AspnetServices
        dotnet pack -c Release /property:Platform=${{ env.PLATFORM }} --no-restore
        set-location $ws\src\MDS.AppFramework
        dotnet build -c Release /property:Platform=${{ env.PLATFORM }} --no-restore
        Copy-Item *.symbols.nupkg -Destination $outPath -Recurse -Force

#     - name: Dotnet Debug Tests
#       if: ${{ github.event_name != 'release' }}
#       run: |
#         set-location ${{ github.workspace }}\src\CommunityToolkit.Extensions.Hosting.WindowsAppSdk
#         dotnet test -c Debug --no-build
#     - name: Dotnet Release Tests
#       if: ${{ github.event_name == 'release' }}
#       run: |
#         set-location ${{ github.workspace }}\src\CommunityToolkit.Extensions.Hosting.WindowsAppSdk
#         dotnet test -c Release --no-build

    - name: GitHub Packages - ColorCode Symbols
      if: ${{ github.event_name != 'release' }}
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        # Path of NuPkg
        nupkg-path: ${{ github.workspace }}\submodules\ColorCodePortable\bin\${{ env.PLATFORM }}\Debug\ColorCodePortable.${{ env.GitVersion_SemVer }}.symbols.nupkg
        # package repository owner
        repo-owner: MarkdownServer
        # user account
        gh-user: sharpninja
        # access token
        token: ${{ secrets.GITHUB_TOKEN }}
        # skip publishing duplicated package(s)
        skip-duplicate: true

    - name: GitHub Packages - Markdig.SyntaxHighlighting Symbols
      if: ${{ github.event_name != 'release' }}
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        # Path of NuPkg
        nupkg-path: ${{ github.workspace }}\submodules\MDS.AspnetServices\bin\${{ env.PLATFORM }}\Debug\Markdig.SyntaxHighlighting.${{ env.GitVersion_SemVer }}.symbols.nupkg
        # package repository owner
        repo-owner: MarkdownServer
        # user account
        gh-user: sharpninja
        # access token
        token: ${{ secrets.GITHUB_TOKEN }}
        # skip publishing duplicated package(s)
        skip-duplicate: true

    - name: GitHub Packages - App Server Symbols
      if: ${{ github.event_name != 'release' }}
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        # Path of NuPkg
        nupkg-path: ${{ github.workspace }}\src\MDS.AspnetServices\bin\${{ env.PLATFORM }}\Debug\MarkdownServer.${{ env.GitVersion_SemVer }}.symbols.nupkg
        # package repository owner
        repo-owner: MarkdownServer
        # user account
        gh-user: sharpninja
        # access token
        token: ${{ secrets.GITHUB_TOKEN }}
        # skip publishing duplicated package(s)
        skip-duplicate: true

    - name: GitHub Packages - App Framework Symbols
      if: ${{ github.event_name != 'release' }}
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        # Path of NuPkg
        nupkg-path: ${{ github.workspace }}\src\MDS.AppFramework\bin\${{ env.PLATFORM }}\Debug\MarkdownServer.ApplicationFramework.${{ env.GitVersion_SemVer }}.symbols.nupkg
        # package repository owner
        repo-owner: MarkdownServer
        # user account
        gh-user: sharpninja
        # access token
        token: ${{ secrets.GITHUB_TOKEN }}
        # skip publishing duplicated package(s)
        skip-duplicate: true

    - name: Nuget Publish
      if: ${{ github.event_name == 'release' }}
      run: |
        $symbolPackages = gci ${{ github.workspace }}\*.${{ env.GitVersion_SemVer }}.symbols.nupkg -ErrorAction Stop

        $symbolPackages | forEach-Object -process {
          dotnet nuget push $_ -k "${{ secrets.NUGET_KEY }}" -s https://api.nuget.org/v3/index.json --skip-duplicate
        }

